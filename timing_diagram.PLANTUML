<img src='https://g.gravizo.com/svg?
custom_mark13
@startuml;

participant "Local_Planner" as A;
participant "Bridge" as B;
participant "Motionplanner" as C;
participant "Obstacle_detect" as D;

-> A: Global Costmap;
activate A;
note left: InitPlanner (service);
A -> B: Req: Global Costmap;
activate B;
B -> D: Req: Global Costmap;
note left: GlobalCostmapPass (service);
activate D;
D --> B: Resp: Room, Static Obstacles;
deactivate D;
B -> C: Room, Static Obstacles;
activate C;
C --> B: Ready;
deactivate C;
B --> A: Resp: Ready;
deactivate B;
deactivate A;

-[#red]> A: Loop 1
-> A: Global Plan;
note left: ConfigPlanner (service);
activate A;
A -> B: Req: Global Plan;
activate B;
B -> C: Goal (next waypoint)
activate C;
C --> B: Velocity & Pose Trajectory (x & y);
B --> A: Resp: Planning Ready;
deactivate C;
deactivate A;
deactivate B;

-[#0000FF]> A: Loop 2
activate A;
note left: GoalReached (service);
A -> B: Req: Goal Reached ;
activate B;
B -> A: Resp: Goal Reached (y/n);
deactivate B;
<- A: Goal Reached (y/n)
deactivate A;

-> A: Goal not reached
activate A;
note left: ComputeVelCommand (service)
A -> B: Req: Current State;
activate B;
D <[#green]-: Loop 3
D<-: Local Costmap;
activate D;
D --> B: Dynamic Obstacle;
deactivate D;
D -[#green]>: Loop 3
B -> C: Dynamic Obstacles;
activate C;
C --> B: Velocity and Pose Trajectory (x & y);
deactivate C;
B --> A: Resp: Velocity Command (cmd_vel);
deactivate B;
<- A: cmd_vel;
deactivate A;
<[#0000FF]- A: Loop 2
<[#red]- A: Loop 1

@enduml
custom_mark13
 }
'/>
